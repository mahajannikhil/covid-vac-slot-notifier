{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","dateInput","setDateInput","pincode","setPincode","searchFreq","setSearchFreq","startedLooking","setStartedLooking","startLooking","pin","date","moment","Date","format","axios","get","then","response","console","log","forEach","sessions","address","available_capacity","window","alert","catch","error","classes","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useStyles","Array","Container","component","maxWidth","CssBaseline","className","TextField","variant","fullWidth","id","label","name","autoFocus","onChange","e","target","value","defaultValue","Select","labelId","placeholder","MenuItem","Button","color","onClick","setInterval","parseInt","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.374a5c22.chunk.js","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport moment from 'moment'\nimport get from 'lodash/get';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport './App.css';\nimport {LinearProgress, MenuItem, Select} from '@material-ui/core';\n\nfunction App() {\n\n  const [dateInput, setDateInput] = React.useState(null);\n  const [pincode, setPincode] = React.useState(null);\n  const [searchFreq, setSearchFreq] = React.useState(1);\n  const [startedLooking, setStartedLooking] = React.useState(false);\n\n  const startLooking = () => {\n    const pin = pincode || '452010';\n    const date = dateInput || moment(new Date()).format('DD-MM-YYYY');\n    axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pin}&date=${date}`)\n    .then(function (response) {\n      console.log(response);\n      const centers = get(response, 'data.centers', []);\n      centers.forEach(({sessions, address}) => {\n        sessions.forEach(({available_capacity}) => {\n          if(available_capacity) {\n            window.alert('Slot available at', address)\n          }\n        })\n      })\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  /*  const sendMessage = () => {\n      const accountSid = 'AC62bb6f5572fe0074c7a52c0ee50d55ad';\n      const authToken = 'efe124de74f8399f4014cffc2b6561e4';\n\n\n      const client = require('twilio')(accountSid, authToken);\n\n      client.messages\n      .create({\n        from: 'whatsapp:+918823887578',\n        body: 'Hello there!',\n        to: 'whatsapp:+919399291719'\n      })\n      .then(message => console.log(message.sid));\n    }*/\n\n  const classes = useStyles();\n  const searchFreqOptions = new Array(60);\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"pincode\"\n            label=\"pincode\"\n            name=\"pincode\"\n            autoFocus\n            onChange={(e) => {\n              setPincode(e.target.value)\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            name=\"date\"\n            label=\"date\"\n            id=\"date\"\n            onChange={(e) => {\n              setDateInput(e.target.value)\n            }}\n            defaultValue={moment(new Date()).format('DD-MM-YYYY')}\n          />\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={searchFreq}\n            onChange={(e) => {\n              setSearchFreq(e.target.value)\n            }}\n            fullWidth\n            placeholder=\"Select Search Frequency (minutes)\"\n          >\n            <MenuItem value={1}>1</MenuItem>\n            <MenuItem value={2}>2</MenuItem>\n            <MenuItem value={5}>5</MenuItem>\n            <MenuItem value={10}>10</MenuItem>\n            <MenuItem value={15}>15</MenuItem>\n            <MenuItem value={20}>20</MenuItem>\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={30}>30</MenuItem>\n            <MenuItem value={35}>35</MenuItem>\n            <MenuItem value={40}>40</MenuItem>\n\n          </Select>\n          Search Frequency (minutes)\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              startLooking();\n              setStartedLooking(true);\n              setInterval(() => {\n                startLooking();\n              }, parseInt(searchFreq, 10) * 60000)\n            }}\n            className={classes.submit}\n          >\n            Start looking\n          </Button>\n          { startedLooking && <LinearProgress />}\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}